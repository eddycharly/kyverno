name: Publish image

description: Publishes a docker image, SBOM, scans vulns, and signs the image.

inputs:
  makefile-target:
    required: true
    description: TODO
  registry:
    required: true
    description: TODO
  registry-username:
    required: true
    description: TODO
  registry-password:
    required: true
    description: TODO
  repository:
    required: true
    description: TODO
  sign-image:
    required: true
    description: TODO
  sbom-name:
    required: true
    description: TODO
  sbom-repository:
    required: true
    description: TODO
  signature-repository:
    required: true
    description: TODO
  main-path:
    required: true
    description: TODO
  # image-tag:
  #   required: true
  #   type: string
  # main-path:
  #   required: true
  #   type: string

# outputs:
#   ko-digest:
#     value: ${{ steps.ko-publish.outputs.digest }}
#     description: TODO
#   digest:
#     value: ${{ steps.publish.outputs.digest }}
#     description: TODO

runs:
  using: composite
  steps:
    # - shell: bash
    #   id: ko-publish
    #   env:
    #     REGISTRY: ${{ inputs.registry }}
    #     REPO: ${{ inputs.repository }}
    #     REGISTRY_PASSWORD: ${{ inputs.registry-password }}
    #     COSIGN_REPOSITORY: ${{ inputs.cosign-repository }}
    #   run: |
    #     set -e
    #     echo "digest=$(make ${{ inputs.makefile-target }})" >> $GITHUB_OUTPUT
    - uses: CycloneDX/gh-gomod-generate-sbom@d4aee0cf5133055dbd98899978246c10c18c440f # v1.1.0
      with:
        version: v1
        args: app -licenses -json -output ${{ inputs.sbom-name }}-bom.cdx.json -main ${{ inputs.main-path }}
    - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: ${{ inputs.sbom-name }}-bom-cdx
        path: ${{ inputs.sbom-name }}-bom.cdx.json
    - shell: bash
      if: ${{ inputs.sign-image == 'true' }}
      env:
        COSIGN_EXPERIMENTAL: 'true'
        COSIGN_REPOSITORY: ${{ inputs.signature-repository }}
      run: |
        set -e
        echo "${{ github.repository }}"
        echo "${{ github.workflow }}"
        echo "${{ github.sha }}"
    # - shell: bash
    #   if: ${{ inputs.sign-image == 'true' }}
    #   env:
    #     COSIGN_EXPERIMENTAL: 'true'
    #     COSIGN_REPOSITORY: ghcr.io/${{ github.repository_owner }}/signatures
    #   run: |
    #     set -e
    #     cosign sign \
    #       -a "repo=${{ github.repository }}" \
    #       -a "workflow=${{ github.workflow }}" \
    #       -a "ref=${{ github.sha }}" \
    #       ${{ steps.ko-publish.outputs.digest }}
#       # - name : Attach SBOM
#       #   if: ${{inputs.tag == 'release'}}
#       #   env:
#       #     COSIGN_REPOSITORY: "ghcr.io/${{ github.repository_owner }}/sbom"
#       #   run: cosign attach sbom --sbom ./${{inputs.image_name}}-v*-bom.cdx.json --type cyclonedx ${{ steps.ko-publish.outputs.digest }}
#       - name: Get image digest
#         id: digest
#         run: |
#           echo "The image generated is: ${{ steps.ko-publish.outputs.digest }}"
#           DIGEST=$(echo ${{ steps.ko-publish.outputs.digest }} | cut -d '@' -f2)
#           echo "Digest from image is: $DIGEST"
#           echo "digest=$DIGEST" >> $GITHUB_OUTPUT
